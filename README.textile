h1. Ag - issue tracking intertwined with Git

Ag is an issue tracker built on top of Git. Sound familiar? You bet.

Why not use a stand-alone issue tracker with a web frontend? Here are some key points:

* *Issues are completely managed via Git.* Issues are plain text files which live in a branch
separate from the project's source code. This means that as you code, all issues and related 
information is right there.

* Keeping *issues in a separate Git branch* doesn't spill issue-related information into your code 
tree.

* *No more 'um... fixed this and that' commit messages.* When you work with issues, you have 
already specified your intentions behind every issue, possibly aided by nested categories.
When you tell Ag that you're starting to work on an issue, Ag creates a dedicated topic 
branch and it will automatically prepare the commit message to establsih the link between 
a commit and an issue. Feel free to add comments if your commit needs more explaining.

* *Nested categories.* Issues can be viewed from different perspectives. For example, an issue 
might be related to various components of the project, or different groups of people might be 
affected by it. Such multi-perspective arrangements can be captured by Ag using nested 
categories (all categories are arranged in a tree). Issues can be linked to one or more 
categories.
